// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// MGLREG_var
double MGLREG_var(arma::mat cov, arma::mat prob_real, arma::mat prob_sam, arma::rowvec gamma1, arma::rowvec gamma2, arma::mat trait, arma::vec err, int dim_cov, int num_sub);
RcppExport SEXP _MGLREG_MGLREG_var(SEXP covSEXP, SEXP prob_realSEXP, SEXP prob_samSEXP, SEXP gamma1SEXP, SEXP gamma2SEXP, SEXP traitSEXP, SEXP errSEXP, SEXP dim_covSEXP, SEXP num_subSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type cov(covSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type prob_real(prob_realSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type prob_sam(prob_samSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type gamma1(gamma1SEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type gamma2(gamma2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type trait(traitSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type err(errSEXP);
    Rcpp::traits::input_parameter< int >::type dim_cov(dim_covSEXP);
    Rcpp::traits::input_parameter< int >::type num_sub(num_subSEXP);
    rcpp_result_gen = Rcpp::wrap(MGLREG_var(cov, prob_real, prob_sam, gamma1, gamma2, trait, err, dim_cov, num_sub));
    return rcpp_result_gen;
END_RCPP
}
// MGLREG_var2
double MGLREG_var2(arma::mat X, arma::mat X_1, arma::mat prob_real, arma::mat prob_sam, arma::rowvec gamma1, arma::rowvec gamma2, arma::mat trait, arma::vec err, int dim_cov, int dim_cov_1, int num_sub);
RcppExport SEXP _MGLREG_MGLREG_var2(SEXP XSEXP, SEXP X_1SEXP, SEXP prob_realSEXP, SEXP prob_samSEXP, SEXP gamma1SEXP, SEXP gamma2SEXP, SEXP traitSEXP, SEXP errSEXP, SEXP dim_covSEXP, SEXP dim_cov_1SEXP, SEXP num_subSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_1(X_1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type prob_real(prob_realSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type prob_sam(prob_samSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type gamma1(gamma1SEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type gamma2(gamma2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type trait(traitSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type err(errSEXP);
    Rcpp::traits::input_parameter< int >::type dim_cov(dim_covSEXP);
    Rcpp::traits::input_parameter< int >::type dim_cov_1(dim_cov_1SEXP);
    Rcpp::traits::input_parameter< int >::type num_sub(num_subSEXP);
    rcpp_result_gen = Rcpp::wrap(MGLREG_var2(X, X_1, prob_real, prob_sam, gamma1, gamma2, trait, err, dim_cov, dim_cov_1, num_sub));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MGLREG_MGLREG_var", (DL_FUNC) &_MGLREG_MGLREG_var, 9},
    {"_MGLREG_MGLREG_var2", (DL_FUNC) &_MGLREG_MGLREG_var2, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_MGLREG(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
